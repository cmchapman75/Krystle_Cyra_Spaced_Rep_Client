{"version":3,"sources":["services/token-service.js","services/idle-service.js","config.js","services/auth-api-service.js","services/lang-api-service.js","contexts/ContentContext.js","contexts/UserContext.js","components/Header/Header.js","components/Stats/Statistics.js","components/Footer/Footer.js","components/PrivateRoute/PrivateRoute.js","components/PublicOnlyRoute/PublicOnlyRoute.js","components/Form/Form.js","components/Button/Button.js","components/RegistrationForm/RegistrationForm.js","routes/RegistrationRoute/RegistrationRoute.js","components/LoginForm/LoginForm.js","routes/LoginRoute/LoginRoute.js","components/Dashboard/Dashboard.js","routes/DashboardRoute/DashboardRoute.js","components/Correct/Correct.js","components/Incorrect/Incorrect.js","components/Feedback/Feedback.js","components/Learning/Learning.js","routes/LearningRoute/LearningRoute.js","routes/NotFoundRoute/NotFoundRoute.js","components/App/App.js","serviceWorker.js","index.js"],"names":["_timeoutId","config","API_ENDPOINT","process","TOKEN_KEY","TokenService","saveAuthToken","token","window","localStorage","setItem","getAuthToken","getItem","clearAuthToken","removeItem","hasAuthToken","parseJwt","jwt","jwtDecode","parseAuthToken","authToken","_getMsUntilExpiry","payload","exp","Date","now","queueCallbackBeforeExpiry","callback","msUntilExpiry","setTimeout","clearCallbackBeforeExpiry","clearTimeout","AuthApiService","postUser","user","fetch","concat","method","headers","content-type","body","JSON","stringify","then","res","ok","json","e","Promise","reject","postLogin","_ref","username","password","err","refreshToken","authorization","_idleCallback","_notIdleEvents","IdleService","setIdleCallback","idleCallback","resetIdleTimer","ev","regiserIdleTimerResets","forEach","event","document","addEventListener","unRegisterIdleResets","removeEventListener","LangService","getLang","response","getHead","head","postGuess","guess","feedback","ContentContext","React","createContext","error","language","words","setContext","feedbackRes","nextWord","setGuess","feedbackFalse","ContentProvider","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","giveFeedback","setState","state","totalScore","wordCorrectCount","wordIncorrectCount","resData","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","getLanguage","stop","setFeedback","id","name","user_id","total_score","answer","isCorrect","inherits","createClass","key","value","content","react_default","createElement","Provider","children","Component","UserContext","setError","clearError","setUser","processLogin","processLogout","UserProvider","_Component","console","setContent","initializeContent","jwtPayload","sub","fetchRefreshToken","logoutBecauseIdle","idle","catch","_this2","Header","handleLogoutClick","context","Link","onClick","to","renderLogoutLink","renderLoginLink","contextType","Stats","className","Footer","Stats_Statistics","PrivateRoute","component","objectWithoutProperties","Route","assign","render","componentProps","contexts_UserContext","Consumer","userContext","contexts_ContentContext","Redirect","pathname","from","location","PublicOnlyRoute","Label","cx","Input","forwardRef","_ref2","ref","type","Required","_ref3","Button","RegistrationForm","firstInput","createRef","handleSubmit","preventDefault","_ev$target","target","onRegistrationSuccess","current","focus","onSubmit","role","htmlFor","required","components_Button_Button","defaultProps","RegistrationRoute","handleRegistrationSuccess","history","push","components_RegistrationForm_RegistrationForm","LoginForm","onLoginSuccess","LoginRoute","handleLoginSuccess","_this$props","destination","components_LoginForm_LoginForm","Dashboard","noFeedback","undefined","map","word","index","original","correct_count","incorrect_count","DashboardRoute","components_Dashboard_Dashboard","Correct","handleNext","Incorrect","log","Feedback","correct","components_Correct_Correct","components_Incorrect_Incorrect","Learning","toLowerCase","sent","_x","apply","arguments","changeGuess","onChange","autocomplete","components_Feedback_Feedback","LearningRoute","currentWord","components_Learning_Learning","NotFoundRoute","App","hasError","components_Header_Header","Switch","exact","path","components_Footer_Footer","Boolean","hostname","match","ReactDOM","BrowserRouter","UserContext_UserProvider","ContentContext_ContentProvider","App_App_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.af742589.chunk.js","sourcesContent":["import jwtDecode from 'jwt-decode'\r\nimport config from '../config'\r\n\r\nlet _timeoutId\r\nconst _TEN_SECONDS_IN_MS = 10000\r\n\r\nconst TokenService = {\r\n  saveAuthToken(token) {\r\n    window.localStorage.setItem(config.TOKEN_KEY, token)\r\n  },\r\n  getAuthToken() {\r\n    return window.localStorage.getItem(config.TOKEN_KEY)\r\n  },\r\n  clearAuthToken() {\r\n    window.localStorage.removeItem(config.TOKEN_KEY)\r\n  },\r\n  hasAuthToken() {\r\n    return !!TokenService.getAuthToken()\r\n  },\r\n  parseJwt(jwt) {\r\n    return jwtDecode(jwt)\r\n  },\r\n  parseAuthToken() {\r\n    const authToken = TokenService.getAuthToken()\r\n    if (authToken)\r\n      return TokenService.parseJwt(authToken)\r\n    else\r\n      return undefined\r\n  },\r\n  _getMsUntilExpiry(payload) {\r\n    return (payload.exp * 1000) - Date.now()\r\n  },\r\n  queueCallbackBeforeExpiry(callback) {\r\n    const msUntilExpiry = TokenService._getMsUntilExpiry(\r\n      TokenService.parseAuthToken()\r\n    )\r\n    _timeoutId = setTimeout(callback, msUntilExpiry - _TEN_SECONDS_IN_MS)\r\n  },\r\n  clearCallbackBeforeExpiry() {\r\n    clearTimeout(_timeoutId)\r\n  },\r\n}\r\n\r\nexport default TokenService\r\n","\r\nlet _timeoutId\r\nlet _idleCallback = null\r\nlet _notIdleEvents = [\r\n  'mousedown',\r\n  'mousemove',\r\n  'keypress',\r\n  'scroll',\r\n  'touchstart',\r\n]\r\nconst _FIVE_MINUTES_IN_MS = 5 * 60 * 1000\r\n\r\nconst IdleService = {\r\n  setIdleCallback(idleCallback) {\r\n    _idleCallback = idleCallback\r\n  },\r\n  resetIdleTimer(ev) {\r\n    clearTimeout(_timeoutId)\r\n    _timeoutId = setTimeout(_idleCallback, _FIVE_MINUTES_IN_MS)\r\n  },\r\n  regiserIdleTimerResets() {\r\n    _notIdleEvents.forEach(event =>\r\n      document.addEventListener(\r\n        event,\r\n        IdleService.resetIdleTimer,\r\n        true,\r\n      )\r\n    )\r\n  },\r\n  unRegisterIdleResets() {\r\n    clearTimeout(_timeoutId)\r\n    _notIdleEvents.forEach(event =>\r\n      document.removeEventListener(\r\n        event,\r\n        IdleService.resetIdleTimer,\r\n        true,\r\n      )\r\n    )\r\n  },\r\n}\r\n\r\nexport default IdleService\r\n","export default {\r\n  \r\n  API_ENDPOINT: process.env.REACT_APP_API_ENDPOINT || 'http://localhost:8000',\r\n  TOKEN_KEY: 'blogful-client-auth-token',\r\n}\r\n","import config from '../config'\r\nimport TokenService from './token-service'\r\n\r\nconst AuthApiService = {\r\n  postUser(user) {\r\n    return fetch(`${config.API_ENDPOINT}/api/user`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n      },\r\n      body: JSON.stringify(user),\r\n    })\r\n      .then(res =>\r\n        (!res.ok)\r\n          ? res.json().then(e => Promise.reject(e))\r\n          : res.json()\r\n      )\r\n  },\r\n  postLogin({ username, password }) {\r\n    return fetch(`${config.API_ENDPOINT}/api/auth/token`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n      },\r\n      body: JSON.stringify( {username, password} ),\r\n    })\r\n      .then(res =>\r\n        (!res.ok)\r\n          ? res.json().then(err => Promise.reject(err))\r\n          : res.json()\r\n      )\r\n  },\r\n  refreshToken() {\r\n    return fetch(`${config.API_ENDPOINT}/api/auth/token`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'authorization': `Bearer ${TokenService.getAuthToken()}`,\r\n      },\r\n    })\r\n      .then(res =>\r\n        (!res.ok)\r\n          ? res.json().then(e => Promise.reject(e))\r\n          : res.json()\r\n      )\r\n  },\r\n}\r\n\r\nexport default AuthApiService\r\n","import config from '../config';\r\nimport TokenService from './token-service'\r\n\r\nconst LangService = {\r\n  getLang: () => {\r\n    return fetch(`${config.API_ENDPOINT}/api/language`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'content-type':'application/json',\r\n        'authorization': `Bearer ${TokenService.getAuthToken()}`\r\n      }\r\n    })\r\n    .then(res => res.json())\r\n    .then(response => response);\r\n  },\r\n  getHead: () => {\r\n    return fetch(`${config.API_ENDPOINT}/api/language/head`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'content-type':'applicatopn/json',\r\n        'authorization': `Bearer ${TokenService.getAuthToken()}`\r\n      }\r\n    })\r\n    .then(res => res.json())\r\n    .then(head => head);\r\n  },\r\n  postGuess: (guess) => {\r\n    return fetch(`${config.API_ENDPOINT}/api/language/guess`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'content-type':'application/json',\r\n        'authorization':`Bearer ${TokenService.getAuthToken()}`\r\n      },\r\n      body: JSON.stringify({\r\n        guess: guess\r\n      })\r\n    })\r\n    .then(res => res.json())\r\n    .then(feedback => feedback);\r\n  }\r\n\r\n}\r\n\r\nexport default LangService;\r\n","import React from 'react';\r\nimport config from '../config';\r\nimport TokenService from '../services/token-service';\r\nimport LangService from '../services/lang-api-service';\r\n\r\nconst ContentContext = React.createContext({\r\n  error: null,\r\n  language: {},\r\n  words: [],\r\n  setContext: () => {},\r\n  head: {},\r\n  getHead: () => {},\r\n  feedbackRes: {},\r\n  nextWord: () => {},\r\n  feedback: null,\r\n  guess: '',\r\n  setGuess: () => {},\r\n  feedbackFalse: () => {},\r\n})\r\n\r\nexport default ContentContext;\r\n\r\n\r\nexport class ContentProvider extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      error: null,\r\n      language: {\r\n        id: 0,\r\n        name: 'placeholder',\r\n        user_id: 0,\r\n        head: 1,\r\n        total_score: 0\r\n      },\r\n      setContext: () => {},\r\n      words: [],\r\n      head: {},\r\n      getHead: () => {},\r\n      feedbackRes: {\r\n        nextWord: '',\r\n        wordCorrectCount: 0,\r\n        wordIncorrectCount: 0,\r\n        totalScore: 0,\r\n        answer: '',\r\n        isCorrect: false,\r\n        guess: '',\r\n        setGuess: () => {}\r\n    },\r\n      nextWord: this.nextWord,\r\n      giveFeedback: this.giveFeedback,\r\n      setFeedback: () => {},\r\n      feedback: false,\r\n      feedbackFalse: () => {},\r\n    } \r\n  }\r\n\r\n\r\n  giveFeedback = () => {\r\n    this.setState({feedback: true})\r\n  }\r\n\r\n  nextWord = () => {\r\n    this.setState({\r\n      head: {\r\n        nextWord: this.state.feedbackRes.nextWord,\r\n        totalScore: this.state.feedbackRes.totalScore,\r\n        wordCorrectCount: this.state.feedbackRes.wordCorrectCount,\r\n        wordIncorrectCount: this.state.feedbackRes.wordIncorrectCount\r\n      },\r\n      feedback:false\r\n    }\r\n    )\r\n  }\r\n\r\n  getHead = () => {\r\n    LangService.getHead().then((resData) => {\r\n      this.setState({\r\n      head: resData\r\n      })\r\n    });\r\n  } \r\n\r\n  setGuess = (guess) => {\r\n    this.setState({\r\n      guess: guess\r\n    })\r\n  }\r\n\r\n  feedbackFalse = () => {\r\n    this.setState({\r\n      feedback: false\r\n    })\r\n  }\r\n\r\n  setContext = async () => {\r\n    await this.getLanguage().then((resData) => this.setState({\r\n      error: null,\r\n      language: resData.language,\r\n      words: resData.words\r\n    }));\r\n    this.getHead();\r\n  } \r\n  \r\n  setFeedback = (resData) => {\r\n    this.setState({\r\n      feedbackRes: resData\r\n    })\r\n  }\r\n\r\n  getLanguage = () => {\r\n    return fetch(`${config.API_ENDPOINT}/language`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'content-type':'application/json',\r\n        'authorization': `Bearer ${TokenService.getAuthToken()}`\r\n      }\r\n    })\r\n    .then(res => res.json())\r\n    .then(response => response);\r\n  }\r\n\r\n  render() {\r\n    const content = {\r\n      error: this.state.error,\r\n      language: this.state.language,\r\n      words: this.state.words,\r\n      head: this.state.head,\r\n      setContext: this.setContext,\r\n      getHead: this.getHead,\r\n      nextWord: this.state.nextWord,\r\n      giveFeedback: this.state.giveFeedback,\r\n      feedbackRes: this.state.feedbackRes,\r\n      setFeedback: this.setFeedback,\r\n      feedback: this.state.feedback,\r\n      guess: this.state.guess,\r\n      setGuess: this.setGuess,\r\n      feedbackFalse: this.feedbackFalse,\r\n    }\r\n    return (\r\n      <ContentContext.Provider value={content}>\r\n        {this.props.children}\r\n      </ContentContext.Provider>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport AuthApiService from '../services/auth-api-service'\r\nimport TokenService from '../services/token-service'\r\nimport IdleService from '../services/idle-service'\r\nimport { ContentProvider } from './ContentContext'\r\nconst UserContext = React.createContext({\r\n  user: {},\r\n  error: null,\r\n  setError: () => {},\r\n  clearError: () => {},\r\n  setUser: () => {},\r\n  processLogin: () => {},\r\n  processLogout: () => {},\r\n})\r\n\r\nexport default UserContext\r\n\r\nexport class UserProvider extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    const state = { user: {}, error: null }\r\n\r\n    const jwtPayload = TokenService.parseAuthToken()\r\n\r\n    if (jwtPayload)\r\n      state.user = {\r\n        id: jwtPayload.user_id,\r\n        name: jwtPayload.name,\r\n        username: jwtPayload.sub,\r\n      }\r\n\r\n    this.state = state;\r\n    IdleService.setIdleCallback(this.logoutBecauseIdle)\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (TokenService.hasAuthToken()) {\r\n      IdleService.regiserIdleTimerResets()\r\n      TokenService.queueCallbackBeforeExpiry(() => {\r\n        this.fetchRefreshToken()\r\n      })\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    IdleService.unRegisterIdleResets()\r\n    TokenService.clearCallbackBeforeExpiry()\r\n  }\r\n\r\n  setError = error => {\r\n    console.error(error)\r\n    this.setState({ error })\r\n  }\r\n\r\n  clearError = () => {\r\n    this.setState({ error: null })\r\n  }\r\n\r\n  setUser = user => {\r\n    this.setState({ user })\r\n  }\r\n\r\n  setContent = () => {\r\n    ContentProvider.initializeContent();\r\n  }\r\n  \r\n  processLogin = authToken => {\r\n    TokenService.saveAuthToken(authToken)\r\n    const jwtPayload = TokenService.parseAuthToken()\r\n    this.setUser({\r\n      id: jwtPayload.user_id,\r\n      name: jwtPayload.name,\r\n      username: jwtPayload.sub,\r\n    })\r\n    IdleService.regiserIdleTimerResets()\r\n    TokenService.queueCallbackBeforeExpiry(() => {\r\n      this.fetchRefreshToken()\r\n    })\r\n  }\r\n\r\n  processLogout = () => {\r\n    TokenService.clearAuthToken()\r\n    TokenService.clearCallbackBeforeExpiry()\r\n    IdleService.unRegisterIdleResets()\r\n    this.setUser({})\r\n  }\r\n\r\n  logoutBecauseIdle = () => {\r\n    TokenService.clearAuthToken()\r\n    TokenService.clearCallbackBeforeExpiry()\r\n    IdleService.unRegisterIdleResets()\r\n    this.setUser({ idle: true })\r\n  }\r\n\r\n  fetchRefreshToken = () => {\r\n    AuthApiService.refreshToken()\r\n      .then(res => {\r\n        TokenService.saveAuthToken(res.authToken)\r\n        TokenService.queueCallbackBeforeExpiry(() => {\r\n          this.fetchRefreshToken()\r\n        })\r\n      })\r\n      .catch(err => {\r\n        this.setError(err)\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const value = {\r\n      user: this.state.user,\r\n      error: this.state.error,\r\n      setError: this.setError,\r\n      clearError: this.clearError,\r\n      setUser: this.setUser,\r\n      processLogin: this.processLogin,\r\n      processLogout: this.processLogout,\r\n    }\r\n    return (\r\n      <UserContext.Provider value={value}>\r\n        {this.props.children}\r\n      </UserContext.Provider>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport TokenService from '../../services/token-service'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport './Header.css'\r\n\r\nclass Header extends Component {\r\n  static contextType = UserContext\r\n\r\n  handleLogoutClick = () => {\r\n    this.context.processLogout()\r\n  }\r\n\r\n  renderLogoutLink() {\r\n    return (\r\n      <div>\r\n        <span>\r\n          {this.context.user.name}\r\n        </span>\r\n        <nav>\r\n          <Link\r\n            onClick={this.handleLogoutClick}\r\n            to='/login'>\r\n            Logout\r\n          </Link>\r\n        </nav>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderLoginLink() {\r\n    return (\r\n      <nav>\r\n        <Link to='/login'>Login </Link>\r\n        {' '}\r\n        <Link to='/register'>Sign up</Link>\r\n      </nav>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <header>\r\n        <h1>\r\n          <Link to='/'>\r\n            Espanolingo\r\n          </Link>\r\n        </h1>\r\n        {TokenService.hasAuthToken()\r\n          ? this.renderLogoutLink()\r\n          : this.renderLoginLink()}\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header\r\n","import React from 'react';\r\nimport './Statistics.css';\r\nimport ContentContext from '../../contexts/ContentContext'\r\n\r\nclass Stats extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n\r\n    }\r\n  }\r\n  static contextType = ContentContext;\r\n  render() {\r\n    return(\r\n      <div className=\"stats\">\r\n          <p>\r\n            Your total score is: <strong>{this.context.head.totalScore}</strong>\r\n          </p>\r\n          <p>\r\n            You have answered this word correctly <strong>{this.context.head.wordCorrectCount}</strong> times.\r\n          </p>\r\n          <p>\r\n            You have answered this word incorrectly <strong>{this.context.head.wordIncorrectCount}</strong> times.\r\n          </p>\r\n         \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Stats;","import React from 'react';\r\nimport UserContext from '../../contexts/UserContext'\r\nimport Stats from '../Stats/Statistics'\r\n\r\nclass Footer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n\r\n    }\r\n  }\r\n\r\n  static contextType = UserContext\r\n\r\n  render() {\r\n    return (\r\n      <footer>\r\n        {this.context.user.name && <Stats />}\r\n      </footer>\r\n    )\r\n  }\r\n \r\n\r\n}\r\n\r\nexport default Footer;","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport ContentContext from '../../contexts/ContentContext';\r\n\r\n\r\nexport default function PrivateRoute({ component, ...props }) {\r\n  const Component = component\r\n  return (\r\n    <Route\r\n      {...props}\r\n      render={componentProps => (\r\n        <UserContext.Consumer>\r\n          {userContext =>\r\n            <ContentContext.Consumer> \r\n              {content => (\r\n                \r\n                  !!userContext.user.id\r\n                  ? <Component {...componentProps} user={userContext} content={content}/>\r\n                  : (\r\n                    <Redirect\r\n                      to={{\r\n                        pathname: userContext.user.idle ? '/login' : '/register',\r\n                        state: { from: componentProps.location },\r\n                      }}\r\n                    />\r\n                  )\r\n              )\r\n              }\r\n            </ContentContext.Consumer>\r\n          } \r\n        </UserContext.Consumer>\r\n      )}\r\n    />\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport UserContext from '../../contexts/UserContext'\r\n\r\nexport default function PublicOnlyRoute({ component, ...props }) {\r\n  const Component = component\r\n  return (\r\n    <Route\r\n      {...props}\r\n      render={componentProps => (\r\n        <UserContext.Consumer>\r\n          {userContext =>\r\n            !!userContext.user.id\r\n              ? <Redirect to={'/'} />\r\n              : <Component {...componentProps} />\r\n          }\r\n        </UserContext.Consumer>\r\n      )}\r\n    />\r\n  )\r\n}\r\n","import React from 'react'\r\nimport cx from 'classnames'\r\nimport './Form.css'\r\n\r\nexport function Label({ className, ...props }) {\r\n  return (\r\n    <label className={cx('Label', className)} {...props} />\r\n  )\r\n}\r\n\r\nexport const Input =  React.forwardRef(({ className, ...props }, ref) => {\r\n  return (\r\n    <input className={cx('Input', className)} type='text' ref={ref} {...props} />\r\n  )\r\n})\r\n\r\nexport function Required({ className, ...props }) {\r\n  return (\r\n    <span className={cx('Required', className)} {...props}>\r\n      &#42;\r\n    </span>\r\n  )\r\n}\r\n\r\nexport function Textarea({ className, ...props }) {\r\n  return (\r\n    <textarea className={cx('Textarea', className)} {...props} />\r\n  )\r\n}\r\n","import React from 'react'\r\nimport cx from 'classnames'\r\nimport './Button.css'\r\n\r\nconst Button = React.forwardRef(({ className, ...props }, ref) => {\r\n  return (\r\n    <button className={cx('Button', className)} ref={ref} {...props} />\r\n  )\r\n})\r\n\r\nexport default Button","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Input, Required, Label } from '../Form/Form'\r\nimport AuthApiService from '../../services/auth-api-service'\r\nimport Button from '../Button/Button'\r\nimport './RegistrationForm.css'\r\n\r\nclass RegistrationForm extends Component {\r\n  static defaultProps = {\r\n    onRegistrationSuccess: () => { }\r\n  }\r\n\r\n  state = { error: null }\r\n\r\n  firstInput = React.createRef()\r\n\r\n  handleSubmit = ev => {\r\n    ev.preventDefault()\r\n    const { name, username, password } = ev.target\r\n    AuthApiService.postUser({\r\n      name: name.value,\r\n      username: username.value,\r\n      password: password.value,\r\n    })\r\n      .then(user => {\r\n        name.value = ''\r\n        username.value = ''\r\n        password.value = ''\r\n        this.props.onRegistrationSuccess()\r\n      })\r\n      .catch(res => {\r\n        this.setState({ error: res.error })\r\n      })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.firstInput.current.focus()\r\n  }\r\n\r\n  render() {\r\n    const { error } = this.state\r\n    return (\r\n      <form\r\n        onSubmit={this.handleSubmit}\r\n      >\r\n        <div role='alert'>\r\n          {error && <p>{error}</p>}\r\n        </div>\r\n        <div>\r\n          <Label htmlFor='registration-name-input'>\r\n            Enter your name<Required />\r\n          </Label>\r\n          <Input\r\n            ref={this.firstInput}\r\n            id='registration-name-input'\r\n            name='name'\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <Label htmlFor='registration-username-input'>\r\n            Choose a username<Required />\r\n          </Label>\r\n          <Input\r\n            id='registration-username-input'\r\n            name='username'\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <Label htmlFor='registration-password-input'>\r\n            Choose a password<Required />\r\n          </Label>\r\n          <Input\r\n            id='registration-password-input'\r\n            name='password'\r\n            type='password'\r\n            required\r\n          />\r\n        </div>\r\n        <footer>\r\n          <Button type='submit'>\r\n            Sign up\r\n          </Button>\r\n          {' '}\r\n          <Link to='/login'>Already have an account?</Link>\r\n        </footer>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default RegistrationForm\r\n","import React, { Component } from 'react'\r\nimport RegistrationForm from '../../components/RegistrationForm/RegistrationForm'\r\n\r\nclass RegistrationRoute extends Component {\r\n  static defaultProps = {\r\n    history: {\r\n      push: () => {},\r\n    },\r\n  }\r\n\r\n  handleRegistrationSuccess = () => {\r\n    const { history } = this.props\r\n    history.push('/login')\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section>\r\n        <p>\r\n          Practice learning a language with the spaced reptition revision technique.\r\n        </p>\r\n        <h2>Sign up</h2>\r\n        <RegistrationForm\r\n          onRegistrationSuccess={this.handleRegistrationSuccess}\r\n        />\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegistrationRoute\r\n","import React, { Component } from 'react'\r\nimport { Input, Label } from '../Form/Form'\r\nimport AuthApiService from '../../services/auth-api-service'\r\nimport UserContext from '../../contexts/UserContext'\r\nimport Button from '../Button/Button'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass LoginForm extends Component {\r\n  static defaultProps = {\r\n    onLoginSuccess: () => { }\r\n  }\r\n\r\n  static contextType = UserContext\r\n\r\n  state = { error: null }\r\n\r\n  firstInput = React.createRef()\r\n\r\n  handleSubmit = ev => {\r\n    ev.preventDefault()\r\n    const { username, password } = ev.target\r\n\r\n    this.setState({ error: null })\r\n\r\n    AuthApiService.postLogin({\r\n      username: username.value,\r\n      password: password.value,\r\n    })\r\n      .then(res => {\r\n        username.value = ''\r\n        password.value = ''\r\n        this.context.processLogin(res.authToken)\r\n        this.props.onLoginSuccess()\r\n      })\r\n      .catch(res => {\r\n        this.setState({ error: res.error })\r\n      })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.firstInput.current.focus()\r\n  }\r\n\r\n  render() {\r\n    const { error } = this.state\r\n    return (\r\n      <form\r\n        className='LoginForm'\r\n        onSubmit={this.handleSubmit}\r\n      >\r\n        <div role='alert'>\r\n          {error && <p>{error}</p>}\r\n        </div>\r\n        <div className=\"regEntryFields\">\r\n          <Label htmlFor='login-username-input'>\r\n            Username\r\n          </Label>\r\n          <Input\r\n            ref={this.firstInput}\r\n            id='login-username-input'\r\n            name='username'\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"regEntryFields\">\r\n          <Label htmlFor='login-password-input'>\r\n            Password\r\n          </Label>\r\n          <Input\r\n            id='login-password-input'\r\n            name='password'\r\n            type='password'\r\n            required\r\n          />\r\n        </div>\r\n        <Button type='submit'>\r\n          Login\r\n        </Button>\r\n        <br />\r\n          {' '}\r\n        <Link to='/register'>New learner? Sign up here!</Link>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default LoginForm\r\n","import React, { Component } from 'react'\r\nimport LoginForm from '../../components/LoginForm/LoginForm';\r\n\r\nclass LoginRoute extends Component {\r\n  static defaultProps = {\r\n    location: {},\r\n    history: {\r\n      push: () => { },\r\n    },\r\n  }\r\n\r\n  handleLoginSuccess = () => {\r\n    const { location, history } = this.props\r\n    const destination = (location.state || {}).from || '/'\r\n    history.push(destination)\r\n    \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section className=\"viewport\">\r\n        <h2>Login</h2>\r\n        <LoginForm\r\n          onLoginSuccess={this.handleLoginSuccess}\r\n        />\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginRoute\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport ContentContext from '../../contexts/ContentContext';\r\nimport './Dashboard.css';\r\n\r\n\r\nclass Dashboard extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    \r\n    this.state = {\r\n      language: '',\r\n      words: ['Placeholder']\r\n    }\r\n  }\r\n\r\n static defaultProps = {\r\n  language: {\r\n    name: 'Default Language',\r\n    total_score: 0\r\n  },\r\n  user: {\r\n    user: {\r\n      name: 'Default username'\r\n    }\r\n  }\r\n }\r\n noFeedback = () => {\r\n   this.context.feedbackFalse();\r\n }\r\n\r\n static contextType = ContentContext\r\n\r\n  render(){\r\n    return(\r\n      <div className=\"dashboardContainer\">\r\n\r\n        <h2>Welcome back, {this.props.user.user.name || 'placeholder'}!\r\n        <br />\r\n        Language: {(this.context.language.name !== undefined && this.context.language.name) || 'placeholder'}\r\n        <br />\r\n        Total correct answers: {this.context.head.totalScore || '0'} </h2>\r\n\r\n        <Link to='/learn'>\r\n        <button onClick={this.noFeedback}>Start practicing</button>\r\n          </Link>\r\n        <div className=\"infoArea\">\r\n          <div className=\"infoHeader\"><h3>Words to practice</h3></div>\r\n          <div className=\"wordsHolder\">\r\n            <div className=\"words\">\r\n            <h4>{this.context.language.name || 'Language'}</h4>\r\n            <ul>\r\n              {this.context.words.map((word, index) => {\r\n                return(\r\n                  <li key={index}><h4>\r\n                  {word.original}</h4>\r\n                  <div>\r\n                  correct answer count: {word.correct_count}<br />\r\n                  incorrect answer count: {word.incorrect_count}\r\n                  </div>\r\n                  </li>\r\n                )\r\n              }) || this.state.words[0]}\r\n            </ul>\r\n            </div>\r\n            \r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Dashboard;","import React, { Component } from 'react'\r\nimport Dashboard from '../../components/Dashboard/Dashboard';\r\nimport ContentContext from '../../contexts/ContentContext';\r\n// import Stats from '../../components/Stats/Statistics'\r\n\r\nclass DashboardRoute extends Component {\r\n\r\n  static contextType = ContentContext\r\n\r\n  componentDidMount() {\r\n    this.context.setContext();\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <section className=\"viewport\">\r\n          <Dashboard content={this.props.content} user={this.props.user}/>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DashboardRoute\r\n","import React from 'react'\r\nimport ContentContext from '../../contexts/ContentContext'\r\nimport './Correct.css'\r\nclass Correct extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n\r\n    }\r\n  }\r\n  static contextType = ContentContext\r\n\r\n  handleNext = (ev) => {\r\n    ev.preventDefault();\r\n    this.context.nextWord();\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div className=\"correct\">\r\n        <div className=\"DisplayScore\">\r\n          <p>Total Score: {this.context.feedbackRes.totalScore}</p>\r\n        </div>\r\n\r\n        <h3>Yay! You were correct! :D</h3>\r\n        <div className=\"DisplayFeedback\">\r\n        <p>The correct translation for <strong>{this.context.head.nextWord}</strong> was <strong>{this.context.feedbackRes.answer}</strong> and you chose <strong>{this.context.guess}</strong>!</p>\r\n        </div>\r\n        \r\n\r\n        <button onClick={this.handleNext}>Try another word!</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Correct;","import React from 'react';\r\nimport ContentContext from '../../contexts/ContentContext';\r\nimport './Incorrect.css'\r\n\r\nclass Incorrect extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n\r\n    }\r\n  }\r\n  static contextType = ContentContext\r\n\r\n  handleNext = (ev) => {\r\n    ev.preventDefault();\r\n    this.context.nextWord();\r\n  }\r\n\r\n  render() {\r\n    console.log('feedback response: ', this.context.feedbackRes)\r\n    return (\r\n      <div className=\"incorrect\">\r\n        <div className=\"DisplayScore\">\r\n          <p>Your total score is: {this.context.feedbackRes.totalScore}</p>\r\n        </div>\r\n\r\n        <h3>Good try, but not quite right :(</h3>\r\n        <div className=\"DisplayFeedback\">\r\n        <p>The correct translation for <strong>{this.context.head.nextWord}</strong> was <strong>{this.context.feedbackRes.answer}</strong> and you chose <strong>{this.context.guess}</strong>!</p>\r\n        </div>\r\n        \r\n\r\n        <button onClick={this.handleNext}>Try another word!</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Incorrect;\r\n","import React from 'react';\r\nimport Correct from '../Correct/Correct';\r\nimport Incorrect from '../Incorrect/Incorrect';\r\n\r\nclass Feedback extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div>\r\n        {this.props.correct && <Correct />}\r\n        {!this.props.correct && <Incorrect />}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Feedback","import React from 'react'\r\nimport ContentContext from '../../contexts/ContentContext';\r\nimport LangService from '../../services/lang-api-service';\r\nimport Feedback from '../Feedback/Feedback'\r\nimport './Learning.css'\r\n\r\nclass Learning extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      guess: '',\r\n      feedback: false,\r\n      correct: false\r\n    }\r\n  }\r\n\r\n  static contextType = ContentContext;\r\n\r\n  componentDidMount() {\r\n    this.context.getHead();\r\n  }\r\n\r\n  handleSubmit = async (ev) => {\r\n    ev.preventDefault();\r\n    let guess = this.state.guess.toLowerCase();\r\n    await this.context.setGuess(guess);\r\n    let feedback = await LangService.postGuess(guess);\r\n    await this.context.setFeedback(feedback);\r\n    this.setState({guess: ''});\r\n    this.setState({correct: feedback.isCorrect})\r\n    this.context.giveFeedback();\r\n  }\r\n\r\n  changeGuess = (ev) => {\r\n    ev.preventDefault();\r\n    this.setState({\r\n      guess: ev.target.value\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div>\r\n        <div className=\"infoArea\">\r\n          <div className=\"infoHeader\">\r\n            <div className=\"stack\">\r\n              <h2>Translate the word:</h2>\r\n              <span>{this.context.head.nextWord}</span>\r\n            </div>\r\n              <br />\r\n          </div>\r\n          {!this.context.feedback && \r\n               \r\n          <div className=\"wordsHolder\">\r\n            <div className=\"guess\">\r\n              <form onSubmit={this.handleSubmit}>\r\n                <label htmlFor=\"learn-guess-input\">What's the translation for this word?</label>\r\n                <input id=\"learn-guess-input\" value={this.state.guess} onChange={this.changeGuess} type=\"text\" autocomplete=\"off\" required/>\r\n                <button type=\"submit\">Submit your answer</button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n          }\r\n\r\n        {this.context.feedback && <Feedback correct={this.state.correct}/>}\r\n\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Learning;","import React, { Component } from 'react'\r\nimport Learning from '../../components/Learning/Learning'\r\n\r\nclass LearningRoute extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state ={\r\n        currentWord: {},\r\n        language: {}\r\n    }\r\n  }\r\n\r\n  \r\n  render() {\r\n    return (\r\n      <section className=\"viewport\">\r\n          <Learning />\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LearningRoute","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass NotFoundRoute extends Component {\r\n  render() {\r\n    return (\r\n      <section className=\"viewport\">\r\n        <h2>404 - Page not found</h2>\r\n        <p>Try going back to your previous page.\r\n        </p>\r\n        <Link to='/'><button>Go home!</button> </Link>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NotFoundRoute\r\n","import React, { Component } from 'react'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport Header from '../Header/Header'\r\nimport Footer from '../Footer/Footer'\r\nimport PrivateRoute from '../PrivateRoute/PrivateRoute'\r\nimport PublicOnlyRoute from '../PublicOnlyRoute/PublicOnlyRoute'\r\nimport RegistrationRoute from '../../routes/RegistrationRoute/RegistrationRoute'\r\nimport LoginRoute from '../../routes/LoginRoute/LoginRoute'\r\nimport DashboardRoute from '../../routes/DashboardRoute/DashboardRoute'\r\nimport LearningRoute from '../../routes/LearningRoute/LearningRoute'\r\nimport NotFoundRoute from '../../routes/NotFoundRoute/NotFoundRoute'\r\nimport './App.css'\r\n\r\nexport default class App extends Component {\r\n  state = { hasError: false }\r\n\r\n  static getDerivedStateFromError(error) {\r\n    console.error(error)\r\n    return { hasError: true }\r\n  }\r\n\r\n  render() {\r\n    const { hasError } = this.state\r\n    return (\r\n      <div className='App'>\r\n        <Header />\r\n        <main>\r\n          {hasError && (\r\n            <div className=\"error\">\r\n              <p>There was an error! Oh no!</p>\r\n            </div>\r\n          )}\r\n\r\n          <Switch>\r\n            <PrivateRoute\r\n              exact\r\n              path={'/'}\r\n              component={DashboardRoute}\r\n            />\r\n            <PrivateRoute\r\n              path={'/learn'}\r\n              component={LearningRoute}\r\n            />\r\n            <PublicOnlyRoute\r\n              path={'/register'}\r\n              component={RegistrationRoute}\r\n            />\r\n            <PublicOnlyRoute\r\n              path={'/login'}\r\n              component={LoginRoute}\r\n            />\r\n            <Route\r\n              component={NotFoundRoute}\r\n            />\r\n          </Switch>\r\n        </main>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'unfetch/polyfill'\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport { UserProvider } from './contexts/UserContext'\r\nimport { ContentProvider } from './contexts/ContentContext'\r\nimport App from './components/App/App'\r\nimport './setup-icons'\r\nimport './index.css'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <UserProvider>\r\n      <ContentProvider>\r\n        <div className=\"o o1\"></div>\r\n        <div className=\"o o2\"></div>\r\n        <div className=\"o o3\"></div>\r\n        <div className=\"o o4\"></div>\r\n        <App />\r\n      </ContentProvider>\r\n    </UserProvider>\r\n  </BrowserRouter>,\r\n  document.getElementById('root'),\r\n)\r\n\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}